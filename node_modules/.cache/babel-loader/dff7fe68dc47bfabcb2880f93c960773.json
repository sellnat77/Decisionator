{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nexports.type = string_ => string_.split(/ *; */).shift();\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.params = value => {\n  const object = {};\n\n  var _iterator = _createForOfIteratorHelper(value.split(/ *; */)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      const string_ = _step.value;\n      const parts = string_.split(/ *= */);\n      const key = parts.shift();\n      const value = parts.shift();\n      if (key && value) object[key] = value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return object;\n};\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.parseLinks = value => {\n  const object = {};\n\n  var _iterator2 = _createForOfIteratorHelper(value.split(/ *, */)),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      const string_ = _step2.value;\n      const parts = string_.split(/ *; */);\n      const url = parts[0].slice(1, -1);\n      const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n      object[rel] = url;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return object;\n};\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host; // secuirty\n\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\n\n\nexports.isObject = object => {\n  return object !== null && typeof object === 'object';\n};\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\n\n\nexports.hasOwn = Object.hasOwn || function (object, property) {\n  if (object == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  return Object.prototype.hasOwnProperty.call(new Object(object), property);\n};\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","type","string_","split","shift","params","value","object","parts","key","_iterator","parseLinks","url","slice","rel","_iterator2","cleanHeader","header","changesOrigin","host","authorization","cookie","isObject","hasOwn","Object","property","TypeError","prototype","hasOwnProperty","call","mixin","target","source"],"sources":["/home/russell/git/Decisionator/node_modules/superagent/src/utils.js"],"sourcesContent":["/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (string_) => string_.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *; */)) {\n    const parts = string_.split(/ *= */);\n    const key = parts.shift();\n    const value = parts.shift();\n\n    if (key && value) object[key] = value;\n  }\n\n  return object;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (value) => {\n  const object = {};\n  for (const string_ of value.split(/ *, */)) {\n    const parts = string_.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    object[rel] = url;\n  }\n\n  return object;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} object\n * @return {Boolean}\n * @api private\n */\nexports.isObject = (object) => {\n  return object !== null && typeof object === 'object';\n};\n\n/**\n * Object.hasOwn fallback/polyfill.\n *\n * @type {(object: object, property: string) => boolean} object\n * @api private\n */\nexports.hasOwn =\n  Object.hasOwn ||\n  function (object, property) {\n    if (object == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    return Object.prototype.hasOwnProperty.call(new Object(object), property);\n  };\n\nexports.mixin = (target, source) => {\n  for (const key in source) {\n    if (exports.hasOwn(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}